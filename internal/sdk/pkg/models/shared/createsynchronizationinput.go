// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CreateSynchronizationInputSyncColumns struct {
	Name  *string `json:"name,omitempty"`
	SysID *string `json:"sysId,omitempty"`
}

type CreateSynchronizationInputSyncColumnsToExclude struct {
	Name  *string `json:"name,omitempty"`
	SysID *string `json:"sysId,omitempty"`
}

type CreateSynchronizationInputSyncFullLoadScheduler struct {
	BeginDate     *string `json:"beginDate,omitempty"`
	ExecutionType *string `json:"executionType,omitempty"`
	Type          *string `json:"type,omitempty"`
}

type CreateSynchronizationInputSyncScheduler struct {
	BeginDate *string `json:"beginDate,omitempty"`
	Type      *string `json:"type,omitempty"`
}

type CreateSynchronizationInputSync struct {
	Active *bool `json:"active,omitempty"`
	// SnowMirror checks if columns exist in ServiceNow. If this flag is set to true,
	AllowInheritedColumns *bool                                            `json:"allowInheritedColumns,omitempty"`
	AutoSchemaUpdate      *bool                                            `json:"autoSchemaUpdate,omitempty"`
	Columns               []CreateSynchronizationInputSyncColumns          `json:"columns,omitempty"`
	ColumnsToExclude      []CreateSynchronizationInputSyncColumnsToExclude `json:"columnsToExclude,omitempty"`
	DeleteStrategy        *string                                          `json:"deleteStrategy,omitempty"`
	EncodedQuery          *string                                          `json:"encodedQuery,omitempty"`
	FullLoadScheduler     *CreateSynchronizationInputSyncFullLoadScheduler `json:"fullLoadScheduler,omitempty"`
	// Name of the table in mirror database where the data will be migrated.
	MirrorTable string `json:"mirrorTable"`
	// Display name of the synchronization.
	Name string `json:"name"`
	// Defines how to synchronize reference field types.
	ReferenceFieldType *string                                  `json:"referenceFieldType,omitempty"`
	RunImmediately     *bool                                    `json:"runImmediately,omitempty"`
	Scheduler          *CreateSynchronizationInputSyncScheduler `json:"scheduler,omitempty"`
	SchedulerPriority  *string                                  `json:"schedulerPriority,omitempty"`
	// Name of the table in ServiceNow.
	Table *string `json:"table,omitempty"`
	// Name of the view in ServiceNow.
	View *string `json:"view,omitempty"`
}

// CreateSynchronizationInput - An input object to creating a Synchronization
type CreateSynchronizationInput struct {
	Sync *CreateSynchronizationInputSync `json:"sync,omitempty"`
}
